// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesTracker.Models;

namespace SalesTracker.Migrations
{
    [DbContext(typeof(SalesTrackerContext))]
    [Migration("20191009203145_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SalesTracker.Models.AwardNotice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EntryDate");

                    b.Property<int>("SalesPersonId");

                    b.Property<bool>("isNotice");

                    b.HasKey("Id");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("AwardNotice");
                });

            modelBuilder.Entity("SalesTracker.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("SalesTracker.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Quantity");

                    b.Property<int>("SalesPersonId");

                    b.Property<int>("StoreItemId");

                    b.HasKey("Id");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("StoreItemId");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("SalesTracker.Models.SalesPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<DateTime>("JoiningDate");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<DateTime?>("LeavingDate");

                    b.Property<bool>("isManager");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("SalesPerson");
                });

            modelBuilder.Entity("SalesTracker.Models.StoreItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostPrice");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("ItemName");

                    b.Property<decimal>("SellingPrice");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("StoreItem");
                });

            modelBuilder.Entity("SalesTracker.Models.AwardNotice", b =>
                {
                    b.HasOne("SalesTracker.Models.SalesPerson", "SalesPerson")
                        .WithMany("AwardNotice")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SalesTracker.Models.Sale", b =>
                {
                    b.HasOne("SalesTracker.Models.SalesPerson", "SalesPerson")
                        .WithMany("Sales")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SalesTracker.Models.StoreItem", "StoreItem")
                        .WithMany("Sales")
                        .HasForeignKey("StoreItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SalesTracker.Models.SalesPerson", b =>
                {
                    b.HasOne("SalesTracker.Models.Department", "Department")
                        .WithMany("SalesPersons")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SalesTracker.Models.StoreItem", b =>
                {
                    b.HasOne("SalesTracker.Models.Department", "Department")
                        .WithMany("StoreItems")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
